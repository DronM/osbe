<?phpclass ModelWhereSQL {		const SQL_STATEMENT = 'WHERE ';	const DEF_COND = 'AND';	const DEF_SIGN = '=';	const PAT_CASE_SEN = "(%s %s %s)";	const PAT_CASE_INSEN = "(lower(%s) %s lower(%s))";	public $fields=array();	public $field_index=array();	/*	public function fieldExists($fieldId){		return array_key_exists($fieldId,$this->fields);	}	public function getFieldById($fieldId){		return $this->fields[$fieldId];	}	*/	public function get_index_key($fieldId,$signe){		return crc32($fieldId.'_'.$signe);	}	public function addExpression($exprId,$expr,$cond=NULL){		$key = $this->get_index_key($exprId,'=');		if (!array_key_exists($key,$this->field_index)){			$this->field_index[$key] = array();		}		array_push($this->field_index[$key],NULL);				array_push($this->fields,			array(				'expression'=>$expr,				'field'=>NULL,				'signe'=>NULL,				'cond'=>($cond==NULL)? ModelWhereSQL::DEF_COND:$cond,				'caseInsen'=>NULL			)		);	}		public function addField($field,$signe=NULL,$cond=NULL,$caseInsen=NULL){		$key = $this->get_index_key($field->getId(),$signe);		if (!array_key_exists($key,$this->field_index)){			$this->field_index[$key] = array();		}		array_push($this->field_index[$key],$field);				array_push($this->fields,			array('field'=>$field,				'expression'=>NULL,				'signe'=>($signe==NULL)? ModelWhereSQL::DEF_SIGN:$signe,				'cond'=>($cond==NULL)? ModelWhereSQL::DEF_COND:$cond,				'caseInsen'=>($caseInsen==NULL)? FALSE:$caseInsen			)		);	}	public function deleteField($fieldId,$signe,$fieldInd=0){		$key = $this->get_index_key($fieldId,$signe);		if (array_key_exists($key,$this->field_index)){									$f_id = $this->field_index[$key][$fieldInd]->getId();						foreach ($this->fields as $ind=>$field){				if ($field['field']->getId()==$f_id){					unset($this->fields[$ind]);					break;				}			}			unset($this->field_index[$key]);		}		}	public function getSQL($whereClause=TRUE){		$res = '';		if (count($this->fields)){			foreach ($this->fields as $field){				$res.=($res=='')? '':' '.$field['cond'].' ';				if (!is_null($field['expression'])){					$res.= $field['expression'];				}				else{					$pat = ($field['caseInsen'])?						ModelWhereSQL::PAT_CASE_INSEN:ModelWhereSQL::PAT_CASE_SEN;					$f_val = ($field['field']->getSQLExpression())?							$field['field']->getSQLExpression():							$field['field']->getValueForDb();					//For soft condition with like					if ($field['signe']=='LIKE' && strlen($f_val) && $f_val[0]!="'"){						$f_val = "'".$f_val."'";					}									/*					if ($field['signe'] == '=ANY'){						$res.=sprintf('%s =ANY(ARRAY[%s])',							$field['field']->getSQLNoAlias(),							$f_val						);									}					else{					*/					$f_sql = $field['field']->getSQLNoAlias();					$res.=sprintf($pat,						$f_sql . ( ($field['signe']=='LIKE')? '::text':'' ),						$field['signe'],						$f_val					);									//}				}			}			$pref = ($whereClause)? ModelWhereSQL::SQL_STATEMENT:'';			return $pref.$res;		}		return "";	}	public function getFieldIterator(){		$arrayobject = new ArrayObject($this->fields);		return $arrayobject->getIterator();	}	public function getFieldValueForDb($fieldId,$signe,$valInd=0,$defVal=NULL){		$key = $this->get_index_key($fieldId,$signe);		if (array_key_exists($key,$this->field_index)		&& count($this->field_index[$key])>$valInd){			return $this->field_index[$key][$valInd]->getValueForDb();		}		else{			return $defVal;		}	}	public function getFieldsById($fieldId,$signe){		$key = $this->get_index_key($fieldId,$signe);		if (array_key_exists($key,$this->field_index)){			return $this->field_index[$key];		}	}	}?>