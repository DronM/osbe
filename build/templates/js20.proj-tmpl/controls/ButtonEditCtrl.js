/** * @author Andrey Mikhalevich <katrenplus@mail.ru>, 2016  * @class * @classdesc button for editting reference controls * @extends ButtonCtrl  * @requires core/extend.js * @requires controls/ButtonCtrl.js        * @param {string} id - html tag id * @param {namespase} options * @param {Edit} options.control * @param {WindowForm} [options.winClass=WindowForm] * @param {namespace} options.winParams */function ButtonEditCtrl(id,options){	options = options || {};		options.glyph = options.glyph || "glyphicon-menu-hamburger";	options.editControl = options.editControl || options.control;		var self = this;	options.onClick = options.onClick ||			function(e){			self.onClickEvent(EventHelper.fixKeyEvent(e));		}				this.setWinClass(options.winClass || WindowForm);	this.setWinParams(options.winParams);			ButtonEditCtrl.superclass.constructor.call(this,id,options);}extend(ButtonEditCtrl,ButtonCtrl);/* private */ButtonEditCtrl.prototype.m_winObj;ButtonEditCtrl.prototype.m_winClass;ButtonEditCtrl.prototype.m_winParams;ButtonEditCtrl.prototype.closeWinObj = function(){	this.m_winObj.close();	delete this.m_winObj;	}/* public */ButtonEditCtrl.prototype.setWinClass = function(v){	this.m_winClass = v;}ButtonEditCtrl.prototype.getWinClass = function(v){	return this.m_winClass;}ButtonEditCtrl.prototype.setWinParams = function(v){	this.m_winParams = v;}ButtonEditCtrl.prototype.getWinParams = function(v){	return this.m_winParams;}/* stub function*/ButtonEditCtrl.prototype.onClickEvent = function(e){	var win_opts = {};		win_opts.app = window.getApp();	var self = this;	win_opts.onClose = function(){		self.closeWinObj();	};		win_opts.URLParams = this.getWinParams();		temp_o = new this.m_winClass(win_opts);		var ctrl = this.getEditControl();	if (ctrl){		if (ctrl.getIsRef()){			win_opts.keys = {};			var ctrl_keys = ctrl.getKeys() || {};						var ctrl_key_ids = ctrl.getKeyIds();						var form_keys = {};			var form_key_ids = temp_o.getKeyIds();						var o_set = false;			for(var n=0;n<ctrl_key_ids.length;n++){				if (ctrl_keys[ctrl_key_ids[n]]){					form_keys[form_key_ids[n]] = ctrl_keys[ctrl_key_ids[n]];					o_set = true;				}			}			if (!o_set){				return;			}			temp_o.setKeys(form_keys);		}	}		this.m_winObj = temp_o;	this.m_winObj.open();}