/* Copyright (c) 2016 	Andrey Mikhalevich, Katren ltd.*//*		Description*//** Requirements* @requires controls/ControlContainer.js *//* constructor@param Control controlGoFirst*/function GridPagination(id,options){	options = options || {};		GridPagination.superclass.constructor.call(this,		id, options.tagName || this.DEF_TAG_NAME, options);				var self = this;		this.m_inf = new Control(id+":inf","div");			this.setControlGoFirst(options.controlGoFirst || new Button(id+":goFirst",		{"glyph":"glyphicon glyphicon-fast-backward",		"onClick":function(){			self.setFrom(0);			},		"attrs":{"title":this.CONTR_GO_FIRST_TITLE[this.getApp().getLang()]}		}	));	this.setControlGoPrev(options.controlGoPrev || new Button(id+":goPrev",		{"glyph":"glyphicon glyphicon-step-backward",		"onClick":function(){			self.setFrom(Math.max(0,self.m_from - self.m_countPerPage));			},		"attrs":{"title":this.CONTR_GO_PREV_TITLE[this.getApp().getLang()]}		}	));	this.setControlGoNext(options.controlGoNext || new Button(id+":goNext",		{"glyph":"glyphicon glyphicon-step-forward",		"onClick":function(){			var from = self.m_from + self.m_countPerPage;			from = (from>=self.m_countTotal)? self.m_from:from;			self.setFrom(from);		},		"attrs":{"title":this.CONTR_GO_NEXT_TITLE[this.getApp().getLang()]}		}	));	this.setControlGoLast(options.controlGoLast || new Button(id+":goLast",		{"glyph":"glyphicon glyphicon-fast-backward",		"onClick":function(){			var pages = Math.floor(self.m_countTotal / self.m_countPerPage);			if ((self.m_countTotal%self.m_countPerPage)==0){				pages--;			}			self.setFrom(pages*self.m_countPerPage);		},		"attrs":{"title":this.CONTR_GO_LAST_TITLE[this.getApp().getLang()]}		}	));		this.setFrom(options.from || 0);		this.setCountPerPage(options.countPerPage || 0);		this.addControls();		this.setInf();}extend(GridPagination,ControlContainer);/*Constants*/GridPagination.prototype.DEF_TAG_NAME = "div";/*Private*/GridPagination.prototype.m_countTotal;GridPagination.prototype.m_countPerPage;GridPagination.prototype.m_from;GridPagination.prototype.m_onGridRefresh;GridPagination.prototype.m_inf;GridPagination.prototype.m_controlGoFirst;GridPagination.prototype.m_controlGoPrev;GridPagination.prototype.m_controlGoNext;GridPagination.prototype.m_controlGoLast;/*Protected*/GridPagination.prototype.addControls = function(){	if (this.m_controlGoFirst) this.addElement(this.m_controlGoFirst);	if (this.m_controlGoPrev) this.addElement(this.m_controlGoPrev);	if (this.m_controlGoNext) this.addElement(this.m_controlGoNext);	if (this.m_controlGoLast) this.addElement(this.m_controlGoLast);	if (this.m_inf) this.addElement(this.m_inf);}GridPagination.prototype.setInf = function(){	var pages = Math.ceil(this.m_countTotal / this.m_countPerPage);	if (isNaN(pages)) pages = 0;	var page = Math.ceil(this.m_from / this.m_countPerPage)+1;	if (isNaN(page)) page = 0;		if (page<=1){		if (this.m_controlGoFirst.getEnabled()) this.m_controlGoFirst.setEnabled(false);		if (this.m_controlGoPrev.getEnabled()) this.m_controlGoPrev.setEnabled(false);			}	else if (page>1){		if (!this.m_controlGoFirst.getEnabled()) this.m_controlGoFirst.setEnabled(true);		if (!this.m_controlGoPrev.getEnabled()) this.m_controlGoPrev.setEnabled(true);	}		if (page==pages){		if (this.m_controlGoLast.getEnabled()) this.m_controlGoLast.setEnabled(false);		if (this.m_controlGoNext.getEnabled()) this.m_controlGoNext.setEnabled(false);				}	else{		if (!this.m_controlGoLast.getEnabled()) this.m_controlGoLast.setEnabled(true);		if (!this.m_controlGoNext.getEnabled()) this.m_controlGoNext.setEnabled(true);		}		this.m_inf.setValue(this.CONTR_INF_PAGE[this.getApp().getLang()]+" "+page+" "+this.CONTR_INF_FROM[this.getApp().getLang()]+" "+pages);}/*Public*/GridPagination.prototype.getFrom = function(){	return this.m_from;}GridPagination.prototype.getCountPerPage = function(){	return this.m_countPerPage;}GridPagination.prototype.setCountTotal = function(countTotal){	this.m_countTotal = countTotal;	this.setInf();}GridPagination.prototype.setCountPerPage = function(countPerPage){	this.m_countPerPage = countPerPage;	}GridPagination.prototype.setFrom = function(from){	this.m_from = from;	this.setInf();	if (this.m_onGridRefresh){		this.m_onGridRefresh();	}}GridPagination.prototype.setOnGridRefresh = function(onGridRefresh){	this.m_onGridRefresh = onGridRefresh;}GridPagination.prototype.setControlGoFirst = function(v){	this.m_controlGoFirst = v;}GridPagination.prototype.setControlGoPrev = function(v){	this.m_controlGoPrev = v;}GridPagination.prototype.setControlGoNext = function(v){	this.m_controlGoNext = v;}GridPagination.prototype.setControlGoLast = function(v){	this.m_controlGoLast = v;}