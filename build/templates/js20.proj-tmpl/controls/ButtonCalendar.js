/** * @author Andrey Mikhalevich <katrenplus@mail.ru>, 2016  * @class * @classdesc button with calculator  * @extends ButtonCtrl * @requires core/extend.js * @requires controls/ButtonCtrl.js        * @param {string} id - html tag id * @param {namespase} options * @param {string} [options.glyph=this.DEF_GLYPH] * @param {Edit} options.editControl input control * @param {string} [options.dateFormat=app.getDateFormat] * @param {string} [options.timeValueStr=00:00:00]  */function ButtonCalendar(id,options){	options = options || {};		options.glyph = options.glyph || this.DEF_GLYPH;			this.setTimeValueStr(options.timeValueStr || "00:00:00");	this.setDateFormat(options.dateFormat || window.getApp().getDateFormat());		var self = this;	options.onClick = options.onClick || 			function(event){				var p = $(self.getEditControl().getNode());				p.datepicker({					format:{						toDisplay: function (date, format, language) {							//console.log("toDisplay date="+date)							//var d = new Date(date);							//if (!self.m_editControl.isNull()){								//var u_date = self.m_editControl.getValue();								//u_date.getHour()							//}							//console.log("m_time="+self.m_time);							var d = new Date(date.getFullYear(),date.getMonth(),date.getDate(),0,0,0,self.m_time);							//console.log("date="+d);							//Preserv user time if any!!!														var fv = DateHelper.format(d,self.m_dateFormat);							//console.log("toDisplay OrigDat="+date+" msTime="+self.m_time+" newDate="+d+" format="+self.m_dateFormat+" formated="+fv)							return fv;						},						toValue: function (date, format, language) {							//console.log("toValue date="+date)							//var v = date.replace(/\/|:|_/g, '');							//return DateHelper.strtotime(date);							//return self.m_editControl.toISODate(v);														var v = DateHelper.userStrToDate(date);							//console.log("toValue date="+date+" v="+v);							return v;						}																						},					language:"ru",					daysOfWeekHighlighted:"0,6",					autoclose:true,					todayHighlight:true,					orientation: "bottom right",					//container:form,					showOnFocus:false,					clearBtn:true				});								p.on('hide', function(ev){					self.getEditControl().applyMask();				});													p.datepicker("show");			};		ButtonCalendar.superclass.constructor.call(		this,id,options);}extend(ButtonCalendar,ButtonCtrl);ButtonCalendar.prototype.DEF_GLYPH = "glyphicon-calendar";ButtonCalendar.prototype.m_time;ButtonCalendar.prototype.m_dateFormat;ButtonCalendar.prototype.setDateFormat = function(v){	this.m_dateFormat = v;}ButtonCalendar.prototype.getDateFormat = function(){	return this.m_dateFormat;}ButtonCalendar.prototype.setTimeValueStr = function(v){	this.m_time = DateHelper.timeToMS(v);}ButtonCalendar.prototype.getDateFormat = function(){	return this.m_dateFormat;}