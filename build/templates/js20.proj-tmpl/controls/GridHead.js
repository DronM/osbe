/**	 * @author Andrey Mikhalevich <katrenplus@mail.ru>  * @class * @classdesc grid head object  * @requires core/extend.js * @requires core/ControlContainer.js  * @extends ControlContainer   * @param {string} id Object identifier * @param {namespace} options * @param {array} [rowClass=GridRow] - Each element of the array maps to a certain head row * @param {array} rowOptions */function GridHead(id,options){	options = options || {};		GridHead.superclass.constructor.call(this,		id,(options.tagName || this.DEF_TAG_NAME),options);	this.setRowClass(options.rowClass);	this.setRowOptions(options.rowOptions);	}extend(GridHead,ControlContainer);/** * @constant */GridHead.prototype.DEF_TAG_NAME = "THEAD";/** * @access private */GridHead.prototype.m_rowClass;/** * @access private */GridHead.prototype.m_rowClassOptions;/** * @access public */GridHead.prototype.getColumns = function(){	var col_list = [];	for (var row_id in this.m_elements){//rows		var row_cols = this.m_elements[row_id].m_elements;//fields		for (var col_id in row_cols){			var columns = row_cols[col_id].getColumns();			//fid = row_cols[col_id].getName();			for (var i=0;i<columns.length;i++){				/*				var fid;				if (columns[i].getField()){					fid = columns[i].getField().getId();				}				else{					fid = col_id;//columns[i].getFieldId();				}				*/				//col_list[i] = columns[i];				//col_list[i].setHeadCell(row_cols[col_id]);				columns[i].setHeadCell(row_cols[col_id]);				col_list.push(columns[i]);			}		}	}	return col_list;}/** * @access public * @param {array of Object} v*/GridHead.prototype.setRowClass = function(v){	this.m_rowClass = v;}/** * @access public * @param {int} ind * @returns {object}*/GridHead.prototype.getRowClass = function(ind){	return (this.m_rowClass)? this.m_rowClass[ind]:GridRow;}/** * @access public * @param {array of Object} v*/GridHead.prototype.setRowOptions = function(v){	this.m_rowOptions = v;}/** * @access public * @param {int} ind - row index * @returns {object}*/GridHead.prototype.getRowOptions = function(ind){	return (this.m_rowOptions)? this.m_rowOptions[ind]:{};}