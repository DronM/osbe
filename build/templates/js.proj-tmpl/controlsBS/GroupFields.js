/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements* @requires controls/ControlContainer.js *//* constructor */function GroupFields(id,options){	options = options || {};	options.className = options.className || this.DEF_CLASS_NAME;	GroupFields.superclass.constructor.call(this,		id,"ul",options);		var self = this;	this.addElement(new Control(id+"_title","div",{"value":"Группировки"}));	this.addElement(new Button(id+"_grp_on",	{"image":{"src":this.IMG_ALL_ON,"alt":"Вкл."},	"onClick":function(){		self.toggleAllParams(true);	}	}));	this.addElement(new Button(id+"_grp_off",	{"image":{"src":this.IMG_ALL_OFF,"alt":"Выкл."},	"onClick":function(){		self.toggleAllParams(false);	}	}));		this.m_groupper = new ListGroupper();	}extend(GroupFields,ControlContainer);GroupFields.prototype.DEF_CLASS_NAME = 'groupper';GroupFields.prototype.m_groupper;GroupFields.prototype.toggleAllParams = function(val){	var n,new_val;	for (var ind=0;ind<this.m_groupper.m_params.length;ind++){		if (val!=undefined){			new_val = val;					}		else{			new_val = !this.m_groupper.m_params[ind].isset;		}		this.m_groupper.m_params[ind].isset = new_val;				n = nd(this.m_groupper.m_params[ind].field+"_grp_toggle");		if (n){			n.checked = new_val;		}	}}/*descr,field,isset*/GroupFields.prototype.addGroup = function(group){	this.m_groupper.addGroup(group.field,group);	var cont = new ControlContainer(group.field+"_grp_cont","li",	{"attrs":{"grp_ind":group.ind}});	var self = this;	var ctrl_check = new EditCheckBox(group.field+"_grp_toggle",{"checked":group.isset,"attrs":{"grp_ind":group.ind}});		EventHandler.addEvent(ctrl_check.m_node,"click",		function(event){			event = EventHandler.fixMouseEvent(event);			var ind = event.target.getAttribute("grp_ind");			if (self.m_groupper.m_params[ind]){				self.m_groupper.m_params[ind].isset = event.target.checked;			}		}	,false);	cont.addElement(ctrl_check);		cont.addElement(new Control(group.field+"_grp_title","div",{"value":group.descr}));		//"className":"grpBtn"	var sys_cont = new ControlContainer(group.field+"_grp_sys_cont","div",{"className":"btns_cont"});	sys_cont.addElement(new Button(group.field+"_grp_up",	{"image":{"src":this.IMG_MOVE_UP,"alt":"up"},	"onClick":function(event){		event = EventHandler.fixMouseEvent(event);		var ind = event.target.parentNode.getAttribute("grp_ind");		var n_cur = event.target.parentNode;		while (n_cur.nodeName.toLowerCase()!='li'){			n_cur = n_cur.parentNode;		}		if (n_cur.parentNode.firstChild!=n_cur){			//may move up			alert("May Move");			var n_prev = n_cur.previousSibling;			n_cur.parentNode.insertBefore(n_cur, n_prev);		}		/*		if (self.m_groupper.moveUp(ind)){			var n_cur = event.target.parentNode.parentNode.parentNode;			var n_prev = n_cur.previousSibling;			n_cur.parentNode.insertBefore(n_cur, n_prev);		}		*/	}	}	));	sys_cont.addElement(new Button(group.field+"_grp_down",	{"image":{"src":this.IMG_MOVE_DOWN,"alt":"down"},	"onClick":function(event){		event = EventHandler.fixMouseEvent(event);		var n_cur = event.target.parentNode;		while (n_cur.nodeName.toLowerCase()!='li'){			n_cur = n_cur.parentNode;		}		if (n_cur.parentNode.lastChild!=n_cur){			//may move down			var n_next = n_cur.nextSibling;			n_cur.parentNode.insertBefore(n_next,n_cur);					}	}	}	));			cont.addElement(sys_cont);	this.addElement(cont);}GroupFields.prototype.getParams = function(struc){			return this.m_groupper.getParams();}GroupFields.prototype.IMG_MOVE_UP = "img/groupper/pointer_up.ico";GroupFields.prototype.IMG_MOVE_DOWN = "img/groupper/pointer_down.ico";GroupFields.prototype.IMG_ALL_ON = "img/groupper/11.png";GroupFields.prototype.IMG_ALL_OFF = "img/groupper/00.png";GroupFields.prototype.getValueAsString= function(){	var data = {};	return array2json(data);}GroupFields.prototype.setValueFromString= function(str){}