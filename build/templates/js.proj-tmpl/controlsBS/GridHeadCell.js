/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements * @requires common/functions.js*//* constructor */function GridHeadCell(id,options){	options = options || {};	options.tagName = options.tagName || this.DEF_TAG_NAME;		this.m_fieldValueToRowClass = options.fieldValueToRowClass;		if (options.visible!=undefined && !options.visible){		options.attrs = options.attrs || {};		options.colAttrs = options.colAttrs || {};		options.attrs["class"] = "invisible";		options.colAttrs["class"] = "invisible";	}		if (options.sortable){		this.m_sortable=true;		options.attrs=options.attrs||{};		var node_class=options.attrs["class"];		node_class=node_class||"";		if (node_class.length){			node_class+=" ";		}		options.attrs["title"]="упорядочить";		options.attrs["class"]=node_class+this.SORT_CLASS;		if (options.sort){			options.attrs["sort"]=options.sort;		}		if (options.sortCol){			options.attrs["sortCol"]=options.sortCol;		}			}		GridHeadCell.superclass.constructor.call(this,		id,options);	this.m_keyCol = options.keyCol || false;	this.m_descrCol = options.descrCol || false;	if (options.colAttrs){		this.m_colAttrs = options.colAttrs;	}	if (options.colControlContainer){		this.m_colControlContainer = options.colControlContainer;	}		this.m_node.align=options.align || "center";		if (options.assocImageArray){		this.m_assocImageArray = options.assocImageArray;	}			var self=this;	this.m_sorting=function(event){				event= EventHandler.fixMouseEvent(event);				var th;		if (event.target.nodeName.toLowerCase()=="th"){			th = event.target;		}		else{			th = DOMHandler.getParentByTagName(event.target,"th");		}		if (th){			var new_direct;			var sort=th.getAttribute("sort");			if (sort==self.SORT_UP){				new_direct = self.SORT_DOWN;				th.setAttribute("sort",self.SORT_DOWN);				var imgs=th.getElementsByTagName("img");				if (imgs&&imgs.length){					imgs[0].src=self.SORT_IMG_DOWN;				}				if (self.m_onRefresh){					self.m_onRefresh();				}			}			else if (sort==self.SORT_DOWN){				new_direct = self.SORT_UP;				th.setAttribute("sort",self.SORT_UP)				var imgs=th.getElementsByTagName("img");				if (imgs&&imgs.length){					imgs[0].src=self.SORT_IMG_UP;				}				if (self.m_onRefresh){					self.m_onRefresh();				}							}			else{				var trs=th.parentNode.childNodes;				for (var i=0;i<trs.length;i++){					if (trs[i].getAttribute("sort")){						DOMHandler.removeAttr(trs[i],"sort");						var imgs=trs[i].getElementsByTagName("img");						if (imgs&&imgs.length){							DOMHandler.removeNode(imgs[0]);													}						//break;					}				}				self.setSortable();				//self.setAttr("sort",self.SORT_UP);				new_direct = self.SORT_UP;				self.setSort(self.SORT_UP);				if (self.m_onRefresh){					self.m_onRefresh();				}							}						if (self.m_grid && TEMPLATE_PARAMS){				var name = self.m_grid.getName();				var col_name = self.getName();				if (!TEMPLATE_PARAMS[name]){					TEMPLATE_PARAMS[name] = {"order":[],"visibility":[]};				}				else if (!TEMPLATE_PARAMS[name].order){					TEMPLATE_PARAMS[name].order = [];				}				if (!TEMPLATE_PARAMS[name].order.length){					var head = self.m_grid.getHead();					for (var row in head.m_elements){						var head_row=head.m_elements[row];												for (var col in head_row.m_elements){										if (head_row.m_elements[col].getSortable()){								var f_name = head_row.m_elements[col].getName();								TEMPLATE_PARAMS[name].order.push({									"id":f_name,									"descr":head_row.m_elements[col].getValue(),									"checked":false,									"direct":undefined								});															}						}					}				}				for (var i=0;i<TEMPLATE_PARAMS[name].order.length;i++){					if (TEMPLATE_PARAMS[name].order[i].id==col_name){						TEMPLATE_PARAMS[name].order[i].checked = true;						TEMPLATE_PARAMS[name].order[i].direct = new_direct;					}					else{						TEMPLATE_PARAMS[name].order[i].checked = false;					}				}				var contr = new TemplateParam_Controller(new ServConnector(HOST_NAME));				contr.run("set_value",{					"params":{"template":name,						"param":"order",						"val":array2json(TEMPLATE_PARAMS[name].order)						},					"errControl":null,					"func":null				});							}		}	}	}extend(GridHeadCell,GridCell);/* constants */GridHeadCell.prototype.SORT_IMG_UP = "img/sorting/up-triangle.gif";GridHeadCell.prototype.SORT_IMG_DOWN = "img/sorting/down-triangle.gif";GridHeadCell.prototype.SORT_UP="asc";GridHeadCell.prototype.SORT_DOWN="desc";GridHeadCell.prototype.SORT_CLASS="sortable";GridHeadCell.prototype.DEF_TAG_NAME = "th";GridHeadCell.prototype.m_keyCol;GridHeadCell.prototype.m_descrCol;GridHeadCell.prototype.m_onRefresh;GridHeadCell.prototype.getKeyCol = function(){	return this.m_keyCol;}GridHeadCell.prototype.getDescrCol = function(){	return this.m_descrCol;}GridHeadCell.prototype.getColAttrs = function(){	return this.m_colAttrs;}GridHeadCell.prototype.getColControlContainer = function(){	return this.m_colControlContainer;}GridHeadCell.prototype.getAssocImageArray = function(){	return this.m_assocImageArray;}GridHeadCell.prototype.setSortable = function(){		EventHandler.addEvent(this.m_node,"click",this.m_sorting,true);}GridHeadCell.prototype.getSortable = function(){	return this.m_sortable;}GridHeadCell.prototype.unsetSort = function(){		var imgs = this.m_node.getElementsByTagName("img");		if (imgs && imgs.length){		DOMHandler.removeNode(imgs[0]);	}	DOMHandler.removeAttr(this.m_node, "sort");}GridHeadCell.prototype.setSort = function(sort){		var img_src=(sort==this.SORT_UP)? this.SORT_IMG_UP:this.SORT_IMG_DOWN;	var img_alt=(sort==this.SORT_UP)? "в":"н";	var img=DOMHandler.createImgElement(img_src,img_alt);	var divs = this.m_node.getElementsByTagName("div");			var parent = this.m_node;	if (divs && divs.length){		parent=divs[0];	}	var imgs = parent.getElementsByTagName("img");		if (imgs && imgs.length){		DOMHandler.removeNode(imgs[0]);	}	parent.appendChild(img);		this.setAttr("sort",sort);}GridHeadCell.prototype.toDOM = function(parent){		GridHeadCell.superclass.toDOM.call(this,parent);		if (DOMHandler.hasClass(this.m_node,this.SORT_CLASS)){		var sort=this.getAttr("sort");		if (sort){			this.setSort(sort);		}			this.setSortable();					}}GridHeadCell.prototype.removeDOM = function(){				if (this.m_sortable){		EventHandler.removeEvent(this.m_node,"click",this.m_sorting,true);	}	GridHeadCell.superclass.removeDOM.call(this);}