/* Copyright (c) 2014 	Andrey Mikhalevich, Katren ltd.*//*		Description*///Ñ„/** Requirements * @requires controls/ViewDialog.js*//* constructor */function Map_View(id,options){	this.m_mapHeight = options.mapHeight||"500";	this.m_mapWidth = options.mapWidth||(getViewportWidth()-10);		this.CURRENT_THEME = options.theme || TRACK_CONSTANTS.DEF_THEME;	Map_View.superclass.constructor.call(this,		id,options);}extend(Map_View,ViewDialog);Map_View.prototype.m_map;Map_View.prototype.m_layer;Map_View.prototype.m_zones;Map_View.prototype.map_control;Map_View.prototype.addMapControl = function(){	this.map_control = new Control("map","div",{	attrs:{style:"width:"+this.m_mapWidth+"px;height:"+this.m_mapHeight+"px;"}}	);	this.addControl(this.map_control);}Map_View.prototype.addFeatureControl = function(){}Map_View.prototype.onGetData = function(resp){	Map_View.superclass.onGetData.call(this,resp,this.m_isCopy);		if (this.map_control){		this.addFeatures();	}}Map_View.prototype.toDOM = function(parent){	Map_View.superclass.toDOM.call(this,parent);		if (this.map_control){		var self = this;		//setting w/h		//var w = getViewportWidth()-10;		//var h = $(this.map_control.m_node).height();		//var h = this.map_control.m_node.getBoundingClientRect().height;		//var h = this.map_control.m_node.style.pixelHeight;		//alert("h="+h);		//this.map_control.m_node.style="width:"+w+"px;height:"+h+"px;";				this.m_map = new OpenLayers.Map(this.map_control.m_node,{"controls":[]});				this.map_control.setAttr("style","");		this.m_layer = new OpenLayers.Layer.OSM();						this.m_map.addLayer(this.m_layer);						var zoom_bar = new OpenLayers.Control.PanZoomBar();		this.m_map.addControl(zoom_bar);			this.m_map.addControl(new OpenLayers.Control.LayerSwitcher());		this.m_map.addControl(new OpenLayers.Control.ScaleLine());		this.m_map.addControl(new OpenLayers.Control.Navigation());					var controls = this.m_map.getControlsByClass('OpenLayers.Control.Navigation');		for(var i=0;i< controls.length; ++i){			controls[i].disableZoomWheel();				}		this.addFeatures();	}}Map_View.prototype.addFeatures = function(){}