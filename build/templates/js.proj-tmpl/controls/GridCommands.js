/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements* @requires controls/ControlContainer.js *//* constructor */function GridCommands(id,options){	options = options || {};	options.className = options.className || this.DEF_CLASS_NAME;	var tagName = options.tagName || this.DEF_TAG_NAME;	GridCommands.superclass.constructor.call(this,		id,tagName,options);	//for export	this.m_publicMethodId = options.publicMethodId;	this.m_controller = options.controller;		var self = this;	if (options.onClickInsert){		this.setOnClickInsert(options.onClickInsert);	}	if (options.noInsert==undefined || options.noInsert==false){		this.addInsert();	}	if (options.noEdit==undefined || options.noEdit==false){		this.addEdit();	}		//copy		if ((options.noInsert==undefined||options.noInsert==false)	&&(options.noCopy==undefined||options.noCopy==false)){		this.addCopy();	}			if (options.noDelete==undefined || options.noDelete==false){		this.addDelete();	}			if (options.noPrint==undefined || options.noPrint==false){		this.addPrint();	}		if (options.controller &&	(options.noExport==undefined || options.noExport==false) ){		this.addExport();	}		if (options.onClickRefresh){		this.setOnClickRefresh(options.onClickRefresh);	}		if (options.noRefresh==undefined || options.noRefresh==false){		this.addRefresh();	}}extend(GridCommands,ControlContainer);GridCommands.prototype.DEF_TAG_NAME = "div";GridCommands.prototype.DEF_CLASS_NAME = 'grid_commands';GridCommands.prototype.IMG_INSERT = "img/cat/cat_new.png";GridCommands.prototype.IMG_EDIT = "img/cat/cat_edit.png";GridCommands.prototype.IMG_COPY = "img/cat/cat_copy.png";GridCommands.prototype.IMG_DELETE = "img/cat/cat_erase.png";GridCommands.prototype.IMG_REFRESH = "img/cat/refresh.png";GridCommands.prototype.IMG_EXP_TO_EXCEL = "img/exp/to_excel.png";GridCommands.prototype.IMG_PRINT = "img/cat/print.png";GridCommands.prototype.m_onClickInsert;GridCommands.prototype.m_onClickRefresh;GridCommands.prototype.m_onClickExport;GridCommands.prototype.m_clickContext;GridCommands.prototype.setOnClickInsert = function(onClickInsert){	this.m_onClickInsert = onClickInsert;}GridCommands.prototype.setOnClickEdit = function(onClickEdit){	this.m_onClickEdit = onClickEdit;}GridCommands.prototype.setOnClickCopy = function(onClickCopy){	this.m_onClickCopy = onClickCopy;}GridCommands.prototype.setOnClickDelete = function(onClickDelete){	this.m_onClickDelete = onClickDelete;}GridCommands.prototype.setOnClickExport = function(onClickExport){	this.m_onClickExport = onClickExport;}GridCommands.prototype.setOnClickRefresh = function(onClickRefresh){	this.m_onClickRefresh = onClickRefresh;}GridCommands.prototype.setClickContext = function(clickContext){	this.m_clickContext = clickContext;}GridCommands.prototype.addInsert = function(){	var self = this;	this.m_btnInsert = new Button(null,	{"image":{"src":this.IMG_INSERT},	"onClick":function(){		if (self.getEnabled()){			self.m_onClickInsert.call(self.m_clickContext);		}		},	"attrs":{"title":"добавить"}	});		this.setElementById(this.getId()+"_insert",this.m_btnInsert);		/*Используется в Grid!!! onKeyInsert*/	this.m_cmdInsert=true;}GridCommands.prototype.addEdit = function(){	var self = this;	this.m_btnEdit = new Button(null,	{"image":{"src":this.IMG_EDIT},	"onClick":function(event){		if (self.m_clickContext.m_selectedRowId		&&self.getEnabled()){			self.m_onClickEdit.call(self.m_clickContext,self.m_clickContext.m_selectedRowId,			json2obj(self.m_clickContext.m_selectedRowKeys));		}		},	"attrs":{"title":"изменить"}	});		this.setElementById(this.getId()+"_edit",this.m_btnEdit);	this.m_cmdEdit=true;	}GridCommands.prototype.addCopy = function(){	var self = this;	this.m_btnCopy = new Button(null,	{"image":{"src":this.IMG_COPY},	"onClick":function(event){		if (self.m_clickContext.m_selectedRowId		&&self.getEnabled()){			self.m_onClickCopy.call(self.m_clickContext,self.m_clickContext.m_selectedRowId,			json2obj(self.m_clickContext.m_selectedRowKeys));		}		},	"attrs":{"title":"копировать"}	});		this.setElementById(this.getId()+"_copy",this.m_btnCopy);	this.m_cmdCopy=true;	}GridCommands.prototype.addDelete = function(){	var self = this;	this.m_btnDelete = new Button(null,	{"image":{"src":this.IMG_DELETE},	"onClick":function(){		if (self.m_clickContext.m_selectedRowId		&&self.getEnabled()){			self.m_onClickDelete.call(self.m_clickContext,self.m_clickContext.m_selectedRowId,			json2obj(self.m_clickContext.m_selectedRowKeys));		}		},	"attrs":{"title":"удалить"}	});		this.setElementById(this.getId()+"_delete",this.m_btnDelete);	this.m_cmdDelete=true;}GridCommands.prototype.addPrint = function(){	var self = this;	this.m_btnPrint = new Button(null,	{"image":{"src":this.IMG_PRINT},	"onClick":function(e){		if (self.getEnabled()){			e = EventHandler.fixMouseEvent(e);			var parent = e.target.parentNode.parentNode.parentNode;			if (parent==undefined)return;			var table;			if (options.tableId){				table=nd(options.tableId);				if (table==undefined)return;			}			else{				var tables=parent.getElementsByTagName("table");				if (tables==undefined || !tables.length)return;				table=tables[0];			}							WindowPrint.show({content:table.outerHTML});		}},	"attrs":{"title":"печать"}	});		this.setElementById(this.getId()+"_print",this.m_btnPrint);	this.m_cmdPrint=true;	}GridCommands.prototype.addExport = function(){	var self = this;	this.m_btnExport = new Button(null,	{"image":{"src":this.IMG_EXP_TO_EXCEL},	"onClick":function(){		if (self.getEnabled()){			var methId = self.m_publicMethodId || "get_list";			var meth = self.m_controller.getPublicMethodById(methId);			meth.setParamValue(self.m_controller.PARAM_VIEW,'ViewExcel');			if (meth.paramExists(self.m_controller.PARAM_FROM)){				meth.removeParam(self.m_controller.PARAM_FROM);			}			if (meth.paramExists(self.m_controller.PARAM_COUNT)){				meth.removeParam(self.m_controller.PARAM_COUNT);			}							var params = self.m_controller.getQueryString(meth);			meth.setParamValue(self.m_controller.PARAM_VIEW,'ViewXML');			top.location.href = HOST_NAME+"index.php?"+params;			//"http://localhost/beton/index.php?c=Client_Controller&f=get_list&v=ViewExcel";		}		},	"attrs":{"title":"экспорт в Excel"}	});		this.setElementById(this.getId()+"_export",this.m_btnExport);	this.m_cmdExcel=true;	}GridCommands.prototype.addRefresh = function(){	var self = this;	this.m_btnRefresh = new Button(null,	{"image":{"src":this.IMG_REFRESH},	"onClick":function(){		if (self.getEnabled()){			self.m_onClickRefresh.call(self.m_clickContext);		}		},	"attrs":{"title":"обновить"}	});		this.setElementById(this.getId()+"_refresh",this.m_btnRefresh);	}