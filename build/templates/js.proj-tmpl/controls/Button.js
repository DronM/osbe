/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///Ñ„/** Requirements * @requires common/DOMHandler.js*//* constructor */function Button(id,options){		options = options || {};	options.className = options.className || this.DEF_CLASS;	Button.superclass.constructor.call(this,id,	options.tag||options.tagName||this.DEF_TAG_NAME,options);		if (options.caption!=undefined){		this.setCaption(options.caption);	}	if (options.image!=undefined){		this.setImage(options.image);	}			var self = this;	this.m_clickFunc = function(e){		if (self.getEnabled()&&self.m_onClick){			self.m_onClick(e);		}	}		if (options.onClick!=undefined){		this.setOnClick(options.onClick);	}		}extend(Button,Control);/* constants */Button.prototype.DEF_TAG_NAME = "div";Button.prototype.DEF_IMAGE_CLASS = "btnImg";Button.prototype.DEF_CLASS = "ctrlBtn";/* private members *//* private methods *//* public methods */Button.prototype.setCaption = function(caption){	if (this.m_node.childNodes.length==0){		this.m_node.appendChild(document.createTextNode(caption));	}	else{		this.m_node.childNodes[0].nodeValue = caption;	}}Button.prototype.getCaption = function(){	return this.m_node.childNodes[0].nodeValue;}Button.prototype.setImage = function(image){	this.m_image = image;	var img = DOMHandler.createImgElement(image.src,image.alt,image.h,image.w);	img.className = this.DEF_IMAGE_CLASS;	this.m_node.appendChild(img);			}Button.prototype.getImage = function(){	return this.m_image;}Button.prototype.setOnClick = function(onClick){	this.m_onClick = onClick;	this.addClick();}Button.prototype.getOnClick = function(){	return this.m_onClick;}Button.prototype.addClick = function(){	var self = this;	EventHandler.addEvent(this.m_node,"click",		this.m_clickFunc,false);}Button.prototype.removeClick = function(){	var self = this;	EventHandler.removeEvent(this.m_node,"click",		this.m_clickFunc,false);}/*Button.prototype.toDOM = function(parent){	Button.superclass.toDOM.call(this,parent);	if (this.m_node&&this.m_onClick&&this.getEnabled()){		this.addClick();	}	}Button.prototype.removeDOM = function(){	if (this.m_node&&this.m_onClick){		this.removeClick();	}	Button.superclass.removeDOM.call(this);}Button.prototype.setEnabled = function(en){	Button.superclass.setEnabled.call(this,en);	if (this.m_onClick&&en){		this.addClick();	}	else if (this.m_onClick&&!en){		this.removeClick();	}	}*/