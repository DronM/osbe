/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///ф/** Requirements* @requires controls/ControlContainer.js *//* constructor */function GridPagination(id,options){	options = options || {};	var tagName = options.tagName || this.DEF_TAG_NAME;	GridPagination.superclass.constructor.call(this,		id,tagName,options);				var self = this;		this.m_inf = new Control();	this.setElementById("inf",this.m_inf);		this.setElementById("go_first",new Button(null,	{"image":{"src":this.IMG_FIRST},	"onClick":function(){		self.setFrom(0);		self.m_onGridRefresh.call(self.m_clickContext);		},	"attrs":{"title":"в начало"}	})	);	this.setElementById("go_prev",new Button(null,	{"image":{"src":this.IMG_PREV},	"onClick":function(){		self.setFrom(Math.max(0,self.m_from - self.m_countPerPage));		self.m_onGridRefresh.call(self.m_clickContext);		},	"attrs":{"title":"предыдущая"}	})	);	this.setElementById("go_next",new Button(null,	{"image":{"src":this.IMG_NEXT},	"onClick":function(){		var from = self.m_from + self.m_countPerPage;		from = (from>=self.m_countTotal)? self.m_from:from;		self.setFrom(from);		self.m_onGridRefresh.call(self.m_clickContext);		},	"attrs":{"title":"следующая"}	})	);	this.setElementById("go_last",new Button(null,	{"image":{"src":this.IMG_LAST},	"onClick":function(){		var pages = Math.floor(self.m_countTotal / self.m_countPerPage);		if ((self.m_countTotal%self.m_countPerPage)==0){			pages--;		}		self.setFrom(pages*self.m_countPerPage);		self.m_onGridRefresh.call(self.m_clickContext);		},	"attrs":{"title":"в конец"}	})	);		options.from = options.from || 0;	this.setFrom(options.from);		if (options.countPerPage){		this.setCountPerPage(options.countPerPage);	}	}extend(GridPagination,ControlContainer);GridPagination.prototype.DEF_TAG_NAME = "div";GridPagination.prototype.IMG_FIRST = "img/pagination/page-first.png";GridPagination.prototype.IMG_FIRST_DIS = "img/pagination/page-first-disabled.png";GridPagination.prototype.IMG_LAST = "img/pagination/page-last.png";GridPagination.prototype.IMG_LAST_DIS = "img/pagination/page-last-disable.png";GridPagination.prototype.IMG_NEXT = "img/pagination/page-next.png";GridPagination.prototype.IMG_NEXT_DIS = "img/pagination/page-next-disable.png";GridPagination.prototype.IMG_PREV = "img/pagination/page-prev.png";GridPagination.prototype.IMG_PREV_DIS = "img/pagination/page-prev-disable.png";GridPagination.prototype.m_countTotal;GridPagination.prototype.m_countPerPage;GridPagination.prototype.m_from;GridPagination.prototype.m_onGridRefresh;GridPagination.prototype.m_clickContext;GridPagination.prototype.m_inf;GridPagination.prototype.getFrom = function(){	return this.m_from;}GridPagination.prototype.getCountPerPage = function(){	return this.m_countPerPage;}GridPagination.prototype.setCountTotal = function(countTotal){	this.m_countTotal = countTotal;	this.setInf();}GridPagination.prototype.setCountPerPage = function(countPerPage){	this.m_countPerPage = countPerPage;	}GridPagination.prototype.setFrom = function(from){	this.m_from = from;	this.setInf();}GridPagination.prototype.setOnGridRefresh = function(onGridRefresh){	this.m_onGridRefresh = onGridRefresh;}GridPagination.prototype.setClickContext = function(clickContext){	this.m_clickContext = clickContext;}GridPagination.prototype.setFirstEnabled = function(enabled){	//this.m_from = from;}GridPagination.prototype.setInf = function(){	var pages = Math.ceil(this.m_countTotal / this.m_countPerPage);	if (isNaN(pages)) pages = 0;	var page = Math.ceil(this.m_from / this.m_countPerPage)+1;	if (isNaN(page)) page = 0;	this.m_inf.setValue("Страница "+page+" из "+pages);}