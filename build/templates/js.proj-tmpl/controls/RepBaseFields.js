/* Copyright (c) 2012 	Andrey Mikhalevich, Katren ltd.*//*		Description*///Ñ„/** Requirements * @requires common/functions.js*//* constructor */function RepBaseFields(id,options){	options = options ||{};	options.commandPanel = new RepGroupFieldsCommands(id+"_cmd");	RepBaseFields.superclass.constructor.call(this,		id,options);			if (options.fields){		for (var i=0;i<options.fields.length;i++){			this.addField(options.fields[i]);		}	}}extend(RepBaseFields,Grid);/*	MUST BE OVERRIDDEN*/RepBaseFields.prototype.addField = function(fieldStruc){}RepBaseFields.prototype.onUp = function(){	var selected_node=this.getSelectedNode();	if (selected_node&&selected_node.previousSibling){		selected_node.parentNode.insertBefore(selected_node,selected_node.previousSibling);	}}RepBaseFields.prototype.onDown = function(){	var selected_node=this.getSelectedNode();	if (selected_node){		var n_up = selected_node.nextSibling;		if (n_up){			n_up.parentNode.insertBefore(n_up,n_up.previousSibling);		}	}}RepBaseFields.prototype.getParams = function(){}RepBaseFields.prototype.getValueAsObj= function(){	var data = {};	var b = this.getBody();	var r_ind = 0;	for (var r_id in b.m_elements){		data[r_id] = {			"ind":DOMHandler.getElementIndex(b.m_elements[r_id].m_node),			"cells":{}};		for (var c_id in b.m_elements[r_id].m_elements){						if (b.m_elements[r_id].m_elements[c_id].m_controlContainer){				data[r_id].cells[c_id] = b.m_elements[r_id].m_elements[c_id].m_controlContainer.getValueAsObj();			}		}	}	return data;}RepBaseFields.prototype.setValueFromObj= function(obj){	var b = this.getBody();	var rows = b.m_node.getElementsByTagName("tr");	for (var r_id in b.m_elements){		if (obj[r_id]){			var ind = DOMHandler.getElementIndex(b.m_elements[r_id].m_node);			for (var c_id in b.m_elements[r_id].m_elements){				if (obj[r_id].cells[c_id]){					b.m_elements[r_id].m_elements[c_id].m_controlContainer.setValueFromObj(obj[r_id].cells[c_id]);				}			}			//set position			if (ind!=obj[r_id].ind&&obj[r_id].ind<rows.length){				//swap rows								b.m_node.insertBefore(rows[ind],rows[obj[r_id].ind]);			}		}	}}